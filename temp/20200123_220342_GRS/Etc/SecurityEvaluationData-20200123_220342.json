[
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [fnapimdemo01dev]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "fnapimdemo01dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
                "ResourceName" : "fnapimdemo01dev", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Storage/storageAccounts/fnapimdemo01dev", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "fnapimdemo01dev", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService110", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the App Service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [core-infra-dev]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Use_CNAME_With_SSL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Custom domain with SSL binding must be configured for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService120", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of custom domain protects a web application from common attacks such as phishing, session hijacking and other DNS-related attacks.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Settings --> Custom Domains and follow the steps mentioned to configure a custom domain. Run command 'New-AzWebAppSSLBinding' to enable the SSL binding for your custom domain. Run 'Get-Help New-AzWebAppSSLBinding -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : [
                            "core-infra-dev.azurewebsites.net"
                        ], 
                        "Message" : "Custom domains are not configured for resource core-infra-dev", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_AuthN_Use_AAD_for_Client_AuthN", 
            "ControlSeverity" : "High", 
            "Description" : "App Service must authenticate users using Azure Active Directory backed credentials", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService130", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.All Enterprise subscriptions are automatically associated with their enterprise directory (xxx.onmicrosoft.com) and users in the native directory are trusted for authentication to enterprise subscriptions.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Settings --> Authentication/Authorization --> turn on 'App Service Authentication' --> Click on 'Azure Active Directory' under Authentication Providers to configure the AAD authentication. There will be a list of options to choose from under 'Action to take when request is not authenticated'. Please make sure that this value is not set to 'Allow Anonymous requests (no action)'. Note: If you are implementing this control via code, then you can attest to the same and mark this as passed. Note: In case of Functions apps, AAD authentication is required only for 'Http Trigger' functions.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "OwnerAccess", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "AAD Authentication for resource core-infra-dev is not required.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_Config_Disable_Remote_Debugging", 
            "ControlSeverity" : "High", 
            "Description" : "Remote debugging must be turned off for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService210", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Remote debugging requires inbound ports to be opened on App Service. These ports become easy targets for compromise from various internet based attacks.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Settings --> Configuration --> General Settings --> Remote Debugging --> Click on 'OFF'.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "RemoteDebuggingEnabled" : false
                        }, 
                        "Message" : "Remote debugging for resource core-infra-dev is turned off", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_Config_Disable_Web_Sockets", 
            "ControlSeverity" : "High", 
            "Description" : "Web Sockets should be disabled for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService220", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "WebSockets protocol (WS) is vulnerable to different types of security attacks. Usage of Web Sockets with in web applications has to be carefully reviewed.", 
            "Recommendation" : "Run command 'Set-AzWebApp -Name '<WebAppName>' -ResourceGroupName '<RGName>' -WebSocketsEnabled $false'. Run 'Get-Help Set-AzWebApp -full' for more help. Refer: https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/HTML5_Security_Cheat_Sheet.md#websockets", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "Config", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "WebSocketsEnabled" : false
                        }, 
                        "Message" : "Web sockets for resource core-infra-dev is not enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_Deploy_Use_Latest_Version", 
            "ControlSeverity" : "Low", 
            "Description" : "The latest version of .NET framework version should be used for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService240", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Running on older .Net versions could mean you are not using latest security classes. Usage of such old classes and types can make your application vulnerable.", 
            "Recommendation" : "Run command 'Set-AzWebApp -Name '<WebAppName>' -ResourceGroupName '<RGName>' -NetFrameworkVersion 'v4.7''. Run 'Get-Help Set-AzWebApp -full' for more help.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "Deploy", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "NetFrameworkVersion" : "v4.0"
                        }, 
                        "Message" : "Latest .Net Framework version is used for resource core-infra-dev", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_Audit_Enable_Logging_and_Monitoring", 
            "ControlSeverity" : "Medium", 
            "Description" : "Auditing and Monitoring must be enabled for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "752c6934-9bcc-4749-b004-655e676ae2ac", 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : "/config/web", 
            "Rationale" : "Auditing enables log collection of important system events pertinent to security. Regular monitoring of audit logs can help to detect any suspicious and malicious activity early and respond in a timely manner.", 
            "Recommendation" : "Run command 'Set-AzWebApp -Name '<WebAppName>' -ResourceGroupName '<RGName>' -DetailedErrorLoggingEnabled $true -HttpLoggingEnabled $true -RequestTracingEnabled $true'. Run 'Get-Help Set-AzWebApp -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "DetailedErrorLoggingEnabled" : false, 
                            "HttpLoggingEnabled" : false, 
                            "RequestTracingEnabled" : false
                        }, 
                        "Message" : "All configurations of diagnostics logs for resource core-infra-dev are not enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Dont_Allow_HTTP_Access", 
            "ControlSeverity" : "High", 
            "Description" : "App Service must only be accessible over HTTPS", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService310", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.", 
            "Recommendation" : "Run command 'Set-AzWebApp -Name '<WebAppName>' -ResourceGroupName '<RGName>' -HttpsOnly $true. Run 'Get-Help Set-AzWebApp -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Website_Load_Certificates_Not_All", 
            "ControlSeverity" : "High", 
            "Description" : "WEBSITE_LOAD_CERTIFICATES parameter must not be set to '*' (i.e. all) for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService320", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using '*' for this parameter means that all certificates will get uploaded to the VM running the website. This will most likely lead to abuse of the principle of least privilege as it is unlikely that the site needs access to all certificates at runtime.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Settings --> Configuration --> Application Settings --> Check for 'WEBSITE_LOAD_CERTIFICATES' key and make sure that value is not set to '*'. Instead choose the specific certificate that is required by the App Service. Refer https://msftplayground.com/2016/11/using-certificates-azure-app-services/ for more details.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "OwnerAccess", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "'WEBSITE_LOAD_CERTIFICATES' parameter defined equal to '*' is not found in App Settings for resource core-infra-dev", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_Authz_Use_Function_Authorization_level_Fn", 
            "ControlSeverity" : "Medium", 
            "Description" : "Authorization level for HTTP Trigger function in a function app should be set to 'Function'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService350", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use 'Function' authorization level to ensure that users with minimum of function keys should only be able to invoke the function. This is in accordance with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Functions App --> your HTTP Trigger Function --> Integrate --> Change Authorization level.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "AuthZ", 
                "OwnerAccess", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No functions are found in Functions app resource  core-infra-dev", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_Configure_EditMode_ReadOnly_Fn", 
            "ControlSeverity" : "Medium", 
            "Description" : "Functions app edit mode should be set to Read Only", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService360", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using 'Read Only' mode ensures that source code is changes come in via a CICD pipeline and not directly through portal. This ensures that code changes are properly audited.", 
            "Recommendation" : "Go to Azure Portal --> your Functions App --> Functions app settings --> Function app edit mode --> Click on 'Read Only'.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Verify that Functions app edit mode should be defined as 'readonly' for resource core-infra-dev", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a limited set of trusted origins.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService380", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> API --> CORS --> Provide the specific domain names that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your app.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "OwnerAccess", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "Message" : "CORS is enabled in app service with access from custom domains ", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "CORS setting Allowed Origins"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_AuthN_Use_Managed_Service_Identity", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use Managed Service Identity (MSI) for accessing other AAD-protected resources from the app service.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService400", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Managed Service Identity (MSI) allows your app to easily access other AAD-protected resources such as Azure Key Vault. The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. ", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Settings --> Identity --> System assigned --> ON", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "AppService", 
                "FunctionApp", 
                "OwnerAccess", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Your app service is using Managed Service Identity (MSI). It is specifically turned on. Make sure this MSI identity is used to access the resources.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Dont_Allow_HTTP_Access_Fn", 
            "ControlSeverity" : "High", 
            "Description" : "Function App must only be accessible over HTTPS", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService410", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer eavesdropping attacks.", 
            "Recommendation" : "Run command 'Set-AzResource -ResourceName '<WebAppName>' -ResourceGroupName '<RGName>' -ResourceType 'Microsoft.Web/sites' -Properties @{httpsOnly='true'} -Force '. Run 'Get-Help Set-AzResource -full' for more help. Note:'HttpsOnly' is required only for 'Http Trigger' functions.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "OwnerAccess", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Enabling 'HttpsOnly' is not required for this resource core-infra-dev.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Use_Secure_TLS_Version", 
            "ControlSeverity" : "High", 
            "Description" : "Use approved version of TLS for the App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService420", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "TLS provides privacy and data integrity between client and server. Using approved TLS version significantly reduces risks from security design issues and security bugs that may be present in older versions.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Settings --> TLS/SSL --> Minimum TLS version --> set to org approved version (see detailed logs).", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Verify_Installed_Extensions", 
            "ControlSeverity" : "Medium", 
            "Description" : "Extensions installed on a App Service should be carefully reviewed", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService430", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Each extension is something like a plugin that adds functionality to your App Service. Installing unknown/unverified extensions can be dangerous as some third party extensions may have vulnerabilities which introduce unnecessary avenues for attack.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> Development Tools --> Extensions --> Verify installed extensions.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No extension is installed on resource core-infra-dev", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_AuthZ_Configure_IP_Restrictions", 
            "ControlSeverity" : "Medium", 
            "Description" : "Setup IP-based access restrictions for App Service if feasible", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService440", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using the IP/VNet subnet rules based access restriction ensures that access to the data or the service is restricted to a specific set of IPs. NOTE: While this control does provide an extra layer of access control protection, it may not always be feasible to implement in all scenarios.", 
            "Recommendation" : "Consider using IP-based access restrictions for App Service if feasible. Steps: Go to Azure Portal --> your App Service --> Networking --> Access Restrictions --> Configure Access Restrictions --> Add/Verify access restriction rule for app and scm site. For more information, refer: https://docs.microsoft.com/en-us/azure/app-service/app-service-ip-restrictions", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "IP rule based access restriction is not set up for app: core-infra-dev", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "IP based access restriction is not set up for scm site used by app.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_AppService_DP_Review_CORS_Request_Credential", 
            "ControlSeverity" : "Medium", 
            "Description" : "Review use of credentials in CORS request for App Service", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService450", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Allowing cross-origin credentials is a security risk. A website at another domain can send a signed-in user's credentials to the app on the user's behalf without the user's knowledge.", 
            "Recommendation" : "Go to Azure Portal --> your App Service --> API --> CORS --> Request Credentials --> Review if you need to enable 'Access-Control-Allow-Credentials'. Note: No action is needed if you are not using CORS for your app.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "CORS Response header 'Access-Control-Allow-Credentials' is disabled for resource.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : null, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : ""
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_Deploy_Dont_Use_Publish_Profiles", 
            "ControlSeverity" : "High", 
            "Description" : "Publish profile credentials must not be used for App Service deployment", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService140", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Publish profile of App Services contains deployment and FTP credentials. There are 2 risks with this. First, the credentials can get easily leaked during the various workflows involving the publish profile. Secondly, use of public profiles weakens auditability of deployment actions.", 
            "Recommendation" : "No predefined role should be present in the App Service and all the custom roles must have all 'publishxml' operations added as the Non Actions, e.g. 'microsoft.web/sites/publishxml/read'. Refer https://docs.microsoft.com/en-us/azure/app-service/faq-deployment#i-am-just-getting-started-with-app-service-web-apps-how-do-i-publish-my-code for exploring ways to securely deploy app service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "Deploy", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_DP_Store_Secrets_in_Key_Vault", 
            "ControlSeverity" : "Medium", 
            "Description" : "All App Service secrets should be stored in Key Vault", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Keeping secrets such as DB connection strings, passwords, keys, etc. in clear text can lead to easy compromise at various avenues during an application's lifecycle. Storing them in a key vault ensures that they are protected at rest.", 
            "Recommendation" : "Refer https://azure.microsoft.com/en-in/documentation/articles/key-vault-get-started/ for configuring Key Vault and storing secrets.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "DP", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_Deploy_Use_Notification_Hub", 
            "ControlSeverity" : "Medium", 
            "Description" : "App Service should use Notification Hub for push notification (instead of directly using Push Notification Service)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Notification Hub provides a better mechanism to manage the keys related Push Notification Systems (PNS).", 
            "Recommendation" : "Refer https://docs.microsoft.com/en-us/azure/notification-hubs/ for details on configuring Notification Hub for push notifications.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "Deploy", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_Deploy_Use_ARM_Template", 
            "ControlSeverity" : "Medium", 
            "Description" : "Deployment of App Service should be done using ARM template", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Deployment using ARM template is more secure than using publish profiles. This is because the former uses user/SPN credentials which can be protected better than publish profiles and provide a better audit trail of deployment activity.", 
            "Recommendation" : "Use an ARM Template to ensure fully repeatable and secured configuration of a deployment. Refer https://azure.microsoft.com/en-gb/resources/templates/ to get sample quickstart templates.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "Deploy", 
                "AppService", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_DP_Configure_Rotate_Keys_Fn", 
            "ControlSeverity" : "Medium", 
            "Description" : "Keys should be renewed after a regular interval", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService330", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Refer https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-http-webhook#authorization-keys for details on Host keys in Functions app.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_DP_Dont_Share_HostKeys_Fn", 
            "ControlSeverity" : "Medium", 
            "Description" : "Host key access should not be shared with individual clients", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService340", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Host Keys grant full access to all the functions within a function app. Not sharing this key with individual clients ensures that clients are granted just enough permissions to invoke a particular function", 
            "Recommendation" : "Refer https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-http-webhook#authorization-keys for details on Host keys in Functions app.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_AppService_DP_Use_Individual_FunctionKeys_Fn", 
            "ControlSeverity" : "Medium", 
            "Description" : "Different functions keys must be generated and shared with individual clients.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AppService370", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Different function keys for individual clients promotes separation of concerns. It also makes revocation easier to manage in the event of a compromise of one client.", 
            "Recommendation" : "Go to Azure Portal --> your Functions App --> your Function --> Manage --> Add New Function Key.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "FunctionApp", 
                "Windows", 
                "Linux"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "AppService", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/appservice"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "Identity" : {
                    "PrincipalId" : "863375c1-f85e-4071-a1db-03ee5e2d04ca", 
                    "TenantId" : "a2995da5-737a-4639-8004-3b3fb8a1c390", 
                    "Type" : "SystemAssigned"
                }, 
                "Kind" : "functionapp", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "core-infra-dev", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "apimdemo01_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
                "ResourceName" : "core-infra-dev", 
                "ResourceType" : "Microsoft.Web/sites", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "EnvironmentName" : "dev", 
                    "Branch" : "test", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm", 
                    "activityName" : "nike", 
                    "dataClassification" : "Protect", 
                    "automation" : "auto", 
                    "costCentre" : "00000", 
                    "environment" : "dev", 
                    "criticality" : "none"
                }, 
                "Type" : "Microsoft.Web/sites"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "apimdemo01_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/sites/core-infra-dev", 
            "ResourceMetadata" : {
                "cers" : null, 
                "csrs" : [], 
                "suspendedTill" : null, 
                "containerSize" : 1536, 
                "clientCertExclusionPaths" : null, 
                "siteMode" : null, 
                "clientCertEnabled" : false, 
                "cloningInfo" : null, 
                "contentAvailabilityState" : "Normal", 
                "state" : "Running", 
                "serverFarm" : null, 
                "owner" : null, 
                "hostNamesDisabled" : false, 
                "outboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66", 
                "functionExecutionUnitsCache" : null, 
                "siteProperties" : {
                    "appSettings" : null, 
                    "metadata" : null, 
                    "properties" : [
                        {
                            "name" : "LinuxFxVersion", 
                            "value" : ""
                        }, 
                        {
                            "name" : "WindowsFxVersion", 
                            "value" : null
                        }
                    ]
                }, 
                "availabilityState" : "Normal", 
                "targetBuildVersion" : null, 
                "resourceGroup" : "apimdemo01_rg", 
                "siteConfig" : {
                    "alwaysOn" : false, 
                    "apiDefinition" : null, 
                    "apiManagementConfig" : null, 
                    "appCommandLine" : "", 
                    "appSettings" : null, 
                    "autoHealEnabled" : false, 
                    "autoHealRules" : null, 
                    "autoSwapSlotName" : null, 
                    "azureMonitorLogCategories" : null, 
                    "connectionStrings" : null, 
                    "cors" : {
                        "allowedOrigins" : [
                            "https://functions.azure.com", 
                            "https://functions-staging.azure.com", 
                            "https://functions-next.azure.com"
                        ], 
                        "supportCredentials" : false
                    }, 
                    "customAppPoolIdentityAdminState" : false, 
                    "customAppPoolIdentityTenantState" : false, 
                    "defaultDocuments" : [
                        "Default.htm", 
                        "Default.html", 
                        "Default.asp", 
                        "index.htm", 
                        "index.html", 
                        "iisstart.htm", 
                        "default.aspx", 
                        "index.php"
                    ], 
                    "detailedErrorLoggingEnabled" : false, 
                    "documentRoot" : null, 
                    "experiments" : {
                        "rampUpRules" : []
                    }, 
                    "fileChangeAuditEnabled" : false, 
                    "ftpsState" : "AllAllowed", 
                    "functionsRuntimeScaleMonitoringEnabled" : false, 
                    "handlerMappings" : null, 
                    "healthCheckPath" : null, 
                    "http20Enabled" : false, 
                    "httpLoggingEnabled" : false, 
                    "ipSecurityRestrictions" : null, 
                    "javaContainer" : null, 
                    "javaContainerVersion" : null, 
                    "javaVersion" : null, 
                    "limits" : null, 
                    "linuxFxVersion" : "", 
                    "loadBalancing" : "LeastRequests", 
                    "localMySqlEnabled" : false, 
                    "logsDirectorySizeLimit" : 35, 
                    "machineKey" : null, 
                    "managedPipelineMode" : "Integrated", 
                    "managedServiceIdentityId" : 9983, 
                    "metadata" : null, 
                    "minTlsVersion" : "1.2", 
                    "netFrameworkVersion" : "v4.0", 
                    "nodeVersion" : "", 
                    "numberOfWorkers" : 1, 
                    "phpVersion" : "5.6", 
                    "preWarmedInstanceCount" : null, 
                    "publishingPassword" : null, 
                    "publishingUsername" : "$core-infra-dev", 
                    "push" : null, 
                    "pythonVersion" : "", 
                    "remoteDebuggingEnabled" : false, 
                    "remoteDebuggingVersion" : null, 
                    "requestTracingEnabled" : false, 
                    "reservedInstanceCount" : 0, 
                    "routingRules" : [], 
                    "runtimeADUser" : null, 
                    "runtimeADUserPassword" : null, 
                    "scmIpSecurityRestrictions" : null, 
                    "scmIpSecurityRestrictionsUseMain" : false, 
                    "scmType" : "None", 
                    "siteAuthEnabled" : false, 
                    "siteAuthSettings" : {
                        "additionalLoginParams" : null, 
                        "allowedAudiences" : null, 
                        "allowedExternalRedirectUrls" : null, 
                        "clientId" : null, 
                        "clientSecret" : null, 
                        "clientSecretCertificateThumbprint" : null, 
                        "defaultProvider" : null, 
                        "enabled" : null, 
                        "facebookAppId" : null, 
                        "facebookAppSecret" : null, 
                        "facebookOAuthScopes" : null, 
                        "googleClientId" : null, 
                        "googleClientSecret" : null, 
                        "googleOAuthScopes" : null, 
                        "isAadAutoProvisioned" : false, 
                        "issuer" : null, 
                        "microsoftAccountClientId" : null, 
                        "microsoftAccountClientSecret" : null, 
                        "microsoftAccountOAuthScopes" : null, 
                        "tokenStoreEnabled" : null, 
                        "twitterConsumerKey" : null, 
                        "twitterConsumerSecret" : null, 
                        "unauthenticatedClientAction" : null
                    }, 
                    "tracingOptions" : null, 
                    "use32BitWorkerProcess" : true, 
                    "virtualApplications" : [
                        {
                            "physicalPath" : "site\\wwwroot", 
                            "preloadEnabled" : false, 
                            "virtualDirectories" : null, 
                            "virtualPath" : "/"
                        }
                    ], 
                    "vnetName" : "", 
                    "websiteTimeZone" : null, 
                    "webSocketsEnabled" : false, 
                    "winAuthAdminState" : 0, 
                    "winAuthTenantState" : 0, 
                    "windowsFxVersion" : null, 
                    "xManagedServiceIdentityId" : null
                }, 
                "computeMode" : null, 
                "deploymentId" : "core-infra-dev", 
                "targetSwapSlot" : null, 
                "sslCertificates" : null, 
                "inboundIpAddress" : "51.140.185.151", 
                "possibleOutboundIpAddresses" : "51.140.185.151,51.140.50.161,51.140.189.49,51.140.60.114,51.140.43.66,51.140.46.219,51.140.103.179,51.140.38.122", 
                "enabled" : true, 
                "runtimeAvailabilityState" : "Normal", 
                "enabledHostNames" : [
                    "core-infra-dev.azurewebsites.net", 
                    "core-infra-dev.scm.azurewebsites.net"
                ], 
                "inProgressOperationId" : null, 
                "reserved" : false, 
                "hostNameSslStates" : [
                    {
                        "hostType" : "Standard", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }, 
                    {
                        "hostType" : "Repository", 
                        "ipBasedSslResult" : null, 
                        "ipBasedSslState" : "NotConfigured", 
                        "name" : "core-infra-dev.scm.azurewebsites.net", 
                        "sslState" : "Disabled", 
                        "thumbprint" : null, 
                        "toUpdate" : null, 
                        "toUpdateIpBasedSsl" : null, 
                        "virtualIP" : null
                    }
                ], 
                "selfLink" : "https://waws-prod-ln1-023.api.azurewebsites.windows.net:454/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/webspaces/apimdemo01_rg-UKSouthwebspace/sites/core-infra-dev", 
                "isXenon" : false, 
                "hostingEnvironmentProfile" : null, 
                "buildVersion" : null, 
                "siteDisabledReason" : 0, 
                "httpsOnly" : true, 
                "webSpace" : "apimdemo01_rg-UKSouthwebspace", 
                "trafficManagerHostNames" : null, 
                "customDomainVerificationId" : "228396C5018E0652D9A54BB542FCFCE6EF24E91D5993D15951C0C3E29AD19C6B", 
                "scmSiteAlsoStopped" : false, 
                "name" : "core-infra-dev", 
                "hyperV" : false, 
                "redundancyMode" : "None", 
                "repositorySiteName" : "core-infra-dev", 
                "geoDistributions" : null, 
                "privateEndpointConnections" : [], 
                "hostingEnvironment" : null, 
                "slotSwapStatus" : null, 
                "clientAffinityEnabled" : false, 
                "domainVerificationIdentifiers" : null, 
                "serverFarmId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/apimdemo01_rg/providers/Microsoft.Web/serverfarms/apimdemo01", 
                "tags" : {
                    "activityName" : "nike", 
                    "automation" : "auto", 
                    "Branch" : "test", 
                    "costCentre" : "00000", 
                    "criticality" : "none", 
                    "dataClassification" : "Protect", 
                    "environment" : "dev", 
                    "EnvironmentName" : "dev", 
                    "managedBy" : "me", 
                    "solutionOwner" : "alm"
                }, 
                "maxNumberOfWorkers" : null, 
                "sku" : "Free", 
                "hostNames" : [
                    "core-infra-dev.azurewebsites.net"
                ], 
                "possibleInboundIpAddresses" : "51.140.185.151", 
                "lastModifiedTimeUtc" : "2019-12-27T08:39:08.9533333Z", 
                "kind" : "functionapp", 
                "homeStamp" : "waws-prod-ln1-023", 
                "storageRecoveryDefaultState" : "Running", 
                "defaultHostName" : "core-infra-dev.azurewebsites.net", 
                "dailyMemoryTimeQuota" : 0, 
                "adminEnabled" : true, 
                "usageState" : "Normal", 
                "hostingEnvironmentId" : null
            }, 
            "ResourceName" : "core-infra-dev", 
            "ResourceType" : "Microsoft.Web/sites", 
            "ResourceTypeName" : "AppService"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is not enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [almcostmgmt]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
                "ResourceName" : "almcostmgmt", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is not enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [almcostmgmt2]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "almcostmgmt2", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "cost_mgmt_rg", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
                "ResourceName" : "almcostmgmt2", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "cost_mgmt_rg", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/cost_mgmt_rg/providers/Microsoft.Storage/storageAccounts/almcostmgmt2", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "almcostmgmt2", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_DP_No_PlainText_Secrets_In_Notebooks", 
            "ControlSeverity" : "High", 
            "Description" : "Secrets and keys must not be in plain text in notebooks and jobs", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks110", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Keeping secrets such as connection strings, passwords, keys, etc. in clear text can lead to easy compromise. Storing them in a secert scope ensures that they are protected at rest.", 
            "Recommendation" : "Use a key vault backed Databricks secret scopes to store any secrets and keys and read them from the respective secret scopes in notebooks and jobs. Refer: https://docs.azuredatabricks.net/user-guide/secrets/index.html", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "PAT", 
                "DP", 
                "Automated", 
                "Admin", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Not able to fetch secret scope details. This has to be manually verified.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_DP_Use_KeyVault_Backed_Secret_Scope", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use Azure Key Vault backed secret scope to hold secrets", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks120", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using Key Vault backed secret scopes leads to imroved protection and segregation of stored secrets.", 
            "Recommendation" : "To use Azure Key Vault backed secret scopes, refer: https://docs.azuredatabricks.net/user-guide/secrets/secret-scopes.html#create-an-azure-key-vault-backed-secret-scope", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "DP", 
                "Automated", 
                "PAT", 
                "Admin", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Not able to fetch secret scope details. This has to be manually verified.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_DP_Independent_KeyVault_Per_Scope", 
            "ControlSeverity" : "Medium", 
            "Description" : "Each secret scope should use an independent key vault", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks130", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using a separate key vault for each secret scope leads to better segregation of access to secrets via use of scope level ACLs. If the same key vault is used for two different scopes then any person with access to either of them will be able to see keys and secrets in both. ", 
            "Recommendation" : "Analyze the separation of access needed in your solution and use different scopes backed by independent key vaults as necessary.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "DP", 
                "Best Practice", 
                "Automated", 
                "PAT", 
                "Admin", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Not able to fetch secret scope details. This has to be manually verified.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_DP_Minimal_Token_Validity", 
            "ControlSeverity" : "High", 
            "Description" : "Personal access tokens (PAT) must have a shortest possible validity period", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks140", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "If a personal access token (PAT) gets compromised, the Databricks assets accessible to the user can be accessed/manipulated by unauthorized users. Minimizing the validity period of the PAT ensures that the window of time available to an attacker in the event of compromise is small.", 
            "Recommendation" : "While creating a PAT, provide the minimum practical expiration period. You can see all tokens genearted by you and their expiration periods by navigating to Databricks Workspace --> Profile --> User Settings --> Access Tokens", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "PAT", 
                "Automated", 
                "DP", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Not able to fetch PAT (personal access token) details. This has to be manually verified.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Databricks. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "RBAC", 
                "Automated", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [workspace-001]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_AuthZ_Limit_Admin_Count", 
            "ControlSeverity" : "Medium", 
            "Description" : "Minimize the number of workspace admins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks160", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Databricks workspace admins have full access on the workspace to perform any operation. Each additional person in the admin role increases the attack surface for the workspace. The number of members in these roles should be kept to as low as possible.", 
            "Recommendation" : "Minimize the number of workspace admins. Navigate to Databricks workspace --> Account --> Admin Console --> Users --> Revoke admin access for users(who no longer requires admin access)", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "Automated", 
                "Admin", 
                "PAT", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Not able to fetch admin details. This has to be manually verified.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_AuthZ_Enable_Workspace_Access_Control", 
            "ControlSeverity" : "Medium", 
            "Description" : "Workspace access control should be enabled", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling workspace access control allows an admin to manage fine-grained user permissions and ensures that users can perform only intended operations. This minimizes exposure of data in case of user account compromise.", 
            "Recommendation" : "To enable and configure workspace access control, refer: https://docs.azuredatabricks.net/administration-guide/admin-settings/workspace-acl.html", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "RBAC", 
                "Automated", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Please verify that Workspace Access Control is enabled for resource 'workspace-001'", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_AuthZ_Enable_Cluster_Access_Control", 
            "ControlSeverity" : "Medium", 
            "Description" : "Cluster access control should be enabled", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling cluster access control allows admin to provide restricted access to user over cluster so that users can perform only intended operations. This minimizes exposure of data in case of user/service account compromise.", 
            "Recommendation" : "To enable and configure cluster access control, refer: https://docs.azuredatabricks.net/administration-guide/admin-settings/cluster-acl.html", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "RBAC", 
                "Automated", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Please verify that Cluster Access Control is enabled for resource 'workspace-001'", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_AuthZ_Enable_Job_Access_Control", 
            "ControlSeverity" : "Medium", 
            "Description" : "Job access control should be enabled", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling job access control ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of data in case of user/service account compromise.", 
            "Recommendation" : "To enable and configure job access control, refer: https://docs.azuredatabricks.net/administration-guide/admin-settings/jobs-acl.html", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "RBAC", 
                "Automated", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Please verify that Job Access Control is enabled for resource 'workspace-001'", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_AuthZ_Prohibit_Guest_Account_Admin_Access", 
            "ControlSeverity" : "High", 
            "Description" : "Guest accounts within the AAD tenant should not be granted admin access", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks220", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Databricks workspace admins have full access on the workspace to perform any operation. Each guest account in an admin role increases the attack surface for the workspace. Adding guest accounts as admin on workspace should be avoided.", 
            "Recommendation" : "Avoid granting access to guest accounts from the AAD tentant. Remove any such accounts that may have been granted access in the past. Navigate to Databricks workspace --> Account --> Admin Console --> Users --> Revoke admin access of guest users(who no longer requires admin access)", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "Admin", 
                "Databricks", 
                "PAT", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Not able to fetch admin details. This has to be manually verified.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Databricks_NetSec_Justify_VNet_Peering", 
            "ControlSeverity" : "High", 
            "Description" : "Use of any virtual network peerings should be justified", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks230", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Resources in the peered virtual networks can communicate with each other directly. If the two peered networks are on different sides of a security boundary (e.g., corpnet v. private vNet), this can lead to exposure of corporate data. Hence any vNet peerings should be closely scrutinized and approved by the network security team", 
            "Recommendation" : "You can remove any virtual network peering by navigating to Azure portal --> Databricks --> Virtual Network Peerings --> select vNET peering --> Delete (unless their presence has been approved by network security team).", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "NetSec", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Managed Resource Group databricks-rg-workspace-001-5sdfnmttdapvu was not found.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Databricks_AuthZ_Cluster_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users must be granted minimum required permissions on clusters", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks170", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted to any user on clusters. Navigate to workspace --> clusters --> select cluster --> Edit --> Permissions, for details refer: https://docs.azuredatabricks.net/administration-guide/admin-settings/cluster-acl.html", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "AuthZ", 
                "RBAC", 
                "Manual", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Databricks_DP_Review_Mounted_DataSources", 
            "ControlSeverity" : "Medium", 
            "Description" : "Do not mount any data sources that may not be required for all users in the workspace.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "Databricks210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Mouting a data source gives all users within the workspace access to the data from the mount point. Thus, mounting sources with sensitive data onto DBFS can lead to unauthorized access.", 
            "Recommendation" : "Create a mount point only if all users in workspace need to have access to all data in the mounted data source. Use tables with ACLs if you want to impose segregation of access on imported data.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "DP", 
                "Manual", 
                "Databricks", 
                "Preview"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Databricks", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/databricks"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "workspace-001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_databricks_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
                "ResourceName" : "workspace-001", 
                "ResourceType" : "Microsoft.Databricks/workspaces", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "trial", 
                    "Size" : null, 
                    "Tier" : null
                }, 
                "SubscriptionId" : null, 
                "Tags" : null, 
                "Type" : "Microsoft.Databricks/workspaces"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_databricks_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_databricks_001/providers/Microsoft.Databricks/workspaces/workspace-001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "workspace-001", 
            "ResourceType" : "Microsoft.Databricks/workspaces", 
            "ResourceTypeName" : "Databricks"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_Deploy_Latest_OS_Version", 
            "ControlSeverity" : "Medium", 
            "Description" : "Virtual Machine should have latest OS version installed", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine110", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Being on the latest OS version significantly reduces risks from security design issues and security bugs that may be present in older versions.", 
            "Recommendation" : "Run command 'Update-AzVM -ResourceGroupName {resourceGroupName} -VM (Get-AzVM -ResourceGroupName {resourceGroupName} -Name {vmName})' . Run 'Get-Help Update-AzVM -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Deploy", 
                "Windows", 
                "Linux", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeKubernetes", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "Offer" : "UbuntuServer", 
                            "OSType" : "Linux", 
                            "Sku" : "16.04.0-LTS"
                        }, 
                        "Message" : "Verify if you are using recommended OS Sku as per Org security policy", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_Enable_Antimalware", 
            "ControlSeverity" : "High", 
            "Description" : "Antimalware must be enabled with real time protection on Virtual Machine", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine130", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : true, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling antimalware protection minimizes the risks from existing and new attacks from various types of malware. Microsoft Antimalware provide real-time protection, scheduled scanning, malware remediation, signature updates, engine updates, samples reporting, exclusion event collection etc.", 
            "Recommendation" : "To install antimalware, Go to Azure Portal --> VM Properties --> Extensions --> Add 'Microsoft Antimalware' --> Enable Real-Time Protection and Scheduled Scan --> Click Ok. If antimalware is already present on VM, validate and resolve endpoint protection recommendations in ASC. Refer: https://docs.microsoft.com/en-us/azure/security-center/security-center-install-endpoint-protection, https://docs.microsoft.com/en-us/azure/security/azure-security-antimalware", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "Windows", 
                "Linux", 
                "SOX", 
                "SI", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "We are not able to check Security Center workspace status. Please validate VM antimalware status manually.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_Config_Enable_NSG", 
            "ControlSeverity" : "Medium", 
            "Description" : "NSG must be configured for Virtual Machine", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine140", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting inbound and outbound traffic via NSGs limits the network exposure of a VM by reducing the attack surface.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/virtual-machines/windows/endpoints-in-resource-manager, https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-nsg-arm-ps", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "Windows", 
                "Linux", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No NSG was found on Virtual Machine subnet or NIC.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_NetSec_Justify_PublicIPs", 
            "ControlSeverity" : "High", 
            "Description" : "Public IPs on a Virtual Machine should be carefully reviewed", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine150", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Public IPs provide direct access over the internet exposing the VM to attacks over the public network. Hence each public IP on a VM must be reviewed carefully.", 
            "Recommendation" : "Go to Azure Portal --> VM Settings --> Networking --> Network Interfaces --> <Select NIC> --> IP Configurations --> <Select IP Configs with Public IP> --> Click 'Disabled' --> Save. Refer: https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-public-ip-address ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "NetSec", 
                "Windows", 
                "Linux", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Public IP is associated with Virtual Machine", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_ASC_OS_Vulnerabilities", 
            "ControlSeverity" : "High", 
            "Description" : "Virtual Machine must be in a healthy state in Azure Security Center", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine171", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Azure Security Center raises alerts (which are typically indicative of resources that are not compliant with some baseline security protection). It is important that these alerts/actions are resolved promptly in order to eliminate the exposure to attacks.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/security-center/security-center-remediate-os-vulnerabilities", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "Windows", 
                "Linux", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "assessmentDetails" : [], 
                            "assessmentKey" : "181ac480-f7c4-544b-9865-11b8ffe87f47", 
                            "assessmentResult" : "None", 
                            "category" : "Compute", 
                            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/e1e5fd5d-3e4c-4ce1-8661-7d1873ae6b15", 
                            "policyName" : "Vulnerabilities in security configuration on your machines should be remediated"
                        }, 
                        "Message" : "VM patch status details:", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Unable to validate baseline status from workspace.Please verify.", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : "", 
                        "Message" : "Details of failing baseline rules can be obtained from Log Analytics workspace :", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : "SecurityBaseline | where TimeGenerated >ago(1d) | where ResourceId ==\"/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourcegroups/rg_iaas_001/providers/microsoft.compute/virtualmachines/vm001001\" | summarize arg_max(TimeGenerated,*)by Description| where AnalyzeResult == \"Failed\" ", 
                        "Message" : "The following query can be used to obtain failing baseline rules :  ", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_Missing_OS_Patches", 
            "ControlSeverity" : "High", 
            "Description" : "Virtual Machine must have all the required OS patches installed.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine172", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Un-patched VMs are easy targets for compromise from various malware/trojan attacks that exploit known vulnerabilities in operating systems and related software.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/security-center/security-center-apply-system-updates . It takes 24 hours to reflect the latest status at ASC.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "Windows", 
                "SOX", 
                "SI", 
                "Linux", 
                "ERvNet", 
                "VirtualMachine"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "assessmentDetails" : [], 
                            "assessmentKey" : "4ab6e3c5-74dd-8b35-9ab9-f61b30875b27", 
                            "assessmentResult" : "None", 
                            "category" : "Compute", 
                            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/86b3d65f-7626-441e-b690-81a8b71cff60", 
                            "policyName" : "System updates should be installed on your machines"
                        }, 
                        "Message" : "VM patch status details:", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Details of missing patches can be obtained from the following workspace", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : "", 
                        "Message" : "Workspace : ", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "The following query can be used to obtain patch details:", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : "Update | where TimeGenerated >ago(1d) |where OSType == \"Linux\" and UpdateState =~ \"Needed\" and iff(isnotnull(toint(Optional)), Optional == false, Optional == \"false\") == true and iff(isnotnull(toint(Approved)), Approved != false, Approved != \"false\") == true and (Classification == \"Security Updates\" or Classification == \"Critical Updates\") and ResourceId ==\"/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourcegroups/rg_iaas_001/providers/microsoft.compute/virtualmachines/vm001001\"| summarize AggregatedValue =dcount(UpdateID) by UpdateID,Title |limit  1000000000 ", 
                        "Message" : "Query : ", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_ASC_Recommendations", 
            "ControlSeverity" : "High", 
            "Description" : "Virtual Machine must implement all the flagged ASC recommendations.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine173", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Azure Security Center provide various security recommendations for resources that are not compliant with some baseline security protection. It is important that these recommendations are resolved promptly in order to eliminate the exposure to attacks.", 
            "Recommendation" : "First, examine the detailed AzSK log file for this VM to find out the specific recommendations this control is currently failing for. Review the ASC documentation for those recommendations and implement the suggested fixes. (Note: Not all ASC recommendations are flagged by AzSK. So the first step is critical.). Refer: https://docs.microsoft.com/en-us/azure/security-center/security-center-virtual-machine-recommendations", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "Windows", 
                "Linux", 
                "ERvNet", 
                "VirtualMachine"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_Audit_Enable_Diagnostics", 
            "ControlSeverity" : "Medium", 
            "Description" : "Diagnostics (IaaSDiagnostics extension on Windows; LinuxDiagnostic extension on Linux) must be enabled on Virtual Machine", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Diagnostics logs are needed for creating activity trail while investigating an incident or a compromise.", 
            "Recommendation" : "Go to Azure Portal --> VM Properties --> Diagnostics settings --> Enable guest-level-monitoring. Refer: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/azure-diagnostics", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "Windows", 
                "Linux", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "'LinuxDiagnostic' extension is either not installed or provisioning failed on Virtual Machine", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_NetSec_Dont_Open_Management_Ports", 
            "ControlSeverity" : "Critical", 
            "Description" : "Do not leave management ports open on Virtual Machines", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Open remote management ports expose a VM/compute node to a high level of risk from internet-based attacks that attempt to brute force credentials to gain admin access to the machine.", 
            "Recommendation" : "Go to Azure Portal --> VM Settings --> Networking --> Inbound security rules --> Select security rule which allows management ports (e.g. RDP-3389, WINRM-5985, SSH-22) --> Click 'Deny' under Action --> Click Save.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "NetSec", 
                "Windows", 
                "Linux", 
                "OwnerAccess", 
                "VirtualMachine"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : [
                            {
                                "Name" : "RDP", 
                                "Port" : 3389
                            }, 
                            {
                                "Name" : "SSH", 
                                "Port" : 22
                            }
                        ], 
                        "Message" : "Checking for Virtual Machine management ports", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Verify if NSG is attached to VM.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_Enable_Vuln_Solution", 
            "ControlSeverity" : "Medium", 
            "Description" : "Vulnerability assessment solution should be installed on VM", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : true, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Known OS/framework vulnerabilities in a system can be easy targets for attackers. An attacker can start by compromising a VM/container with such a vulnerability and can eventually compromise the security of the entire network. A vulnerability assessment solution can help to detect/warn about vulnerabilities in the system and facilitate addressing them in a timely manner.", 
            "Recommendation" : "To install vulnerability assessment solution, please refer: https://docs.microsoft.com/en-us/azure/security-center/security-center-vulnerability-assessment-recommendations", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "Windows", 
                "Linux", 
                "SI", 
                "ERvNet", 
                "ExcludeDatabricks", 
                "ExcludeKubernetes", 
                "VirtualMachine"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Required vulnerability assessment solution 'QualysAgentLinux' is not present in VM.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_Deploy_GuestConfig_Extension", 
            "ControlSeverity" : "Medium", 
            "Description" : "Guest Configuration extension must be deployed to the VM using Azure Policy assignment", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : true, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Installing Guest configuration extension on VM allows you to run In-Guest Policy on the VM, making it possible to monitor system and security policies for compliance checks in the VM.", 
            "Recommendation" : "This control checks that the VM meets the following criteria: [a] Guest Configuration Extension is installed and provisioned successfully, [b] 'SystemAssigned' managed identity (MSI) is enabled for the VM. Both, the required Guest Configuration extension and a system-assigned MSI, will be automatically deployed and configured when the machine is in scope for an Azure Policy assignment that includes definitions in the Guest Configuration category.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "Windows", 
                "Linux", 
                "SI", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Required guest configuration extension 'ConfigurationForLinux' is not present in VM.", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "The VM does not have a SystemAssigned managed identity", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_GuestConfig_Policy_Health", 
            "ControlSeverity" : "Medium", 
            "Description" : "Guest config extension should report compliant status for all in-guest policies.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine220", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : true, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "In-guest policies cover various native (data-plane)  security requirements for a VM.  A VM that is compliant to these requirements has a lower overall exposure to getting compromised.", 
            "Recommendation" : "Run Get-AzVMGuestPolicyStatus -ResourceGroupName <VM Resource group name> -VMName <VM Name> to get further details like Compliance reason, last check time etc. and ensure that the issues are resolved.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "Windows", 
                "Linux", 
                "SI", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No guest configuration policy assignment has been found for this resource.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VirtualMachine_SI_Deploy_Required_Extensions", 
            "ControlSeverity" : "Medium", 
            "Description" : "All VM extensions required as per your Org policy must be deployed to the VM", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualMachine230", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : true, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "One or more extensions may be required for maintaining data plane security hygiene and visibility for all Azure VMs in use at an Org. It is important to ensure all required extensions are installed and in healthy provisioning state.", 
            "Recommendation" : "Please look at the detailed AzSK scan logs to determine missing or unhealthy extensions and fix them using command: Set-AzVMExtension -ResourceGroupName '<VM Resource Group Name}>'  -VMName  '<VM Resource Name>'  -Name '<Extension Name>' -Publisher '<Publisher>' -Type '<ExtensionType>'", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Config", 
                "Windows", 
                "Linux", 
                "SI", 
                "ERvNet", 
                "VirtualMachine", 
                "ExcludeDatabricks"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : [
                            {
                                "ExtensionType" : "ConfigurationForLinux", 
                                "Publisher" : "Microsoft.GuestConfiguration"
                            }, 
                            {
                                "ExtensionType" : "QualysAgentLinux", 
                                "Publisher" : "Qualys"
                            }, 
                            {
                                "ExtensionType" : "LinuxDiagnostic", 
                                "Publisher" : "Microsoft.Azure.Diagnostics"
                            }, 
                            {
                                "ExtensionType" : "OmsAgentForLinux", 
                                "Publisher" : "Microsoft.EnterpriseCloud.Monitoring"
                            }
                        ], 
                        "Message" : "Following required extensions are not present in VM:", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : [
                            {
                                "ExtensionType" : "ConfigurationForLinux", 
                                "Publisher" : "Microsoft.GuestConfiguration"
                            }, 
                            {
                                "ExtensionType" : "QualysAgentLinux", 
                                "Publisher" : "Qualys"
                            }, 
                            {
                                "ExtensionType" : "LinuxDiagnostic", 
                                "Publisher" : "Microsoft.Azure.Diagnostics"
                            }, 
                            {
                                "ExtensionType" : "OmsAgentForLinux", 
                                "Publisher" : "Microsoft.EnterpriseCloud.Monitoring"
                            }
                        ], 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Missing or unhealthy extensions:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualMachine", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualmachine"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "vm001001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
                "ResourceName" : "vm001001", 
                "ResourceType" : "Microsoft.Compute/virtualMachines", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Compute/virtualMachines"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Compute/virtualMachines/vm001001", 
            "ResourceMetadata" : {
                "VMDetails" : {
                    "IsVMConnectedToERvNet" : false, 
                    "IsVMDeallocated" : false, 
                    "Offer" : "UbuntuServer", 
                    "OSType" : "Linux", 
                    "PrivateIPs" : "10.0.3.4;", 
                    "PublicIPs" : "", 
                    "Sku" : "16.04.0-LTS"
                }
            }, 
            "ResourceName" : "vm001001", 
            "ResourceType" : "Microsoft.Compute/virtualMachines", 
            "ResourceTypeName" : "VirtualMachine"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is not enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [diag1c3407e369a8c27e]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "diag1c3407e369a8c27e", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_iaas_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
                "ResourceName" : "diag1c3407e369a8c27e", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_LRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_iaas_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_iaas_001/providers/Microsoft.Storage/storageAccounts/diag1c3407e369a8c27e", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "diag1c3407e369a8c27e", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_AuthN_Use_Cert_Auth_for_Apps", 
            "ControlSeverity" : "High", 
            "Description" : "Azure Active Directory applications, which have access to Key Vault, must use certificate to authenticate to Key Vault", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault110", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Password/shared secret credentials can be easily shared and hence can be easily compromised. Certificate credentials offer better security.", 
            "Recommendation" : "Remove any password credentials from Azure AD Applications and use certificate credentials instead. Run command Remove-AzureADApplicationPasswordCredential -InformationAction '{ActionPreference}' -InformationVariable '{InformationVariable}' -KeyId '{KeyId}' -ObjectId '{ObjectId}'. Refer: https://docs.microsoft.com/en-us/powershell/module/azuread/remove-azureadapplicationpasswordcredential?view=azureadps-2.0, https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-certificate-credentials#register-your-certificate-with-azure-ad", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "OwnerAccess", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Azure AD Applications have access to Key Vault.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_AuthN_Dont_Share_KeyVault_Unless_Trust", 
            "ControlSeverity" : "High", 
            "Description" : "Applications must not share a Key Vault unless they trust each other and they need access to the same secrets at runtime", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault120", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Key Vault contains critical information like credentials/secrets etc. All applications can access all secrets from a given Key Vault. This can violate trust boundaries between applications.", 
            "Recommendation" : "Ensure that there is a clear need for apps to share secrets if they are sharing a Key Vault. Else setup independent Key Vaults for each application.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "KeyVault", 
                "OwnerAccess", 
                "GraphRead"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Azure AD Applications have access to Key Vault.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : null, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : ""
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "High", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault130", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Key Vault. Run command Remove-AzRoleAssignment -SignInName '{signInName}' -Scope '{scope}' -RoleDefinitionName '{role definition name}'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help. Assign 'Key Vault Contributor' RBAC role to developers who need to manage Key Vault configurations. Refer: https://docs.microsoft.com/en-us/azure/key-vault/key-vault-secure-your-key-vault, https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-manage-access-powershell", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [kv001demo001]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_AuthZ_Grant_Min_Access_policies", 
            "ControlSeverity" : "High", 
            "Description" : "All Key Vault access policies must be defined with minimum required permissions to keys and secrets", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault140", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by defining Key Vault access policies ensures that applications/users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Use command Set-AzKeyVaultAccessPolicy -VaultName '{VaultName}' -ResourceGroupName '{ResourceGroupName}'  -PermissionsToKeys '{PermissionsToKeys}' -PermissionsToSecrets '{PermissionsToSecrets}'  -PermissionsToCertificates '{PermissionsToCertificates}' -ObjectId '{ObjectId}'. Refer:  https://docs.microsoft.com/en-us/powershell/module/az.keyvault/Set-AzKeyVaultAccessPolicy", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : [], 
                        "Message" : "Validate access policies and their assigned permissions to Key/Secret/Certificate - [kv001demo001]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : null, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : ""
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_AuthZ_Configure_Advanced_Access_Policies", 
            "ControlSeverity" : "Medium", 
            "Description" : "Advanced access policies must be configured on a need basis", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Advanced access policy allows Azure services (Azure Resource Manager, Virtual Machine, Disk Encryption etc.) to seamlessly access Key Vault. To avoid unintentional access to Key Vault from Azure services, advanced access policies must be configured only as required.", 
            "Recommendation" : "Remove any advanced policies that are not required using the command: Remove-AzKeyVaultAccessPolicy -VaultName '{VaultName}' -ResourceGroupName '{ResourceGroupName}' -EnabledForDeployment -EnabledForTemplateDeployment -EnabledForDiskEncryption. Refer: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/Remove-AzKeyVaultAccessPolicy", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : {
                            "Enable access to Azure Resource Manager for template deployment" : false, 
                            "Enable access to Azure Disk Encryption for volume encryption" : false, 
                            "Enable access to Azure Virtual Machines for deployment" : false
                        }, 
                        "Message" : "All Advanced Access Policies are disabled - [kv001demo001]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "Enable access to Azure Resource Manager for template deployment" : false, 
                            "Enable access to Azure Disk Encryption for volume encryption" : false, 
                            "Enable access to Azure Virtual Machines for deployment" : false
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Key Vault advanced access policies"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_DP_Keys_Protect_By_HSM", 
            "ControlSeverity" : "Medium", 
            "Description" : "All Keys in Key Vault must be protected by HSM [Key Type = HSM Protected Key]", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault160", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A hardware security module (HSM) is a physical device that provides extra security for sensitive data like Keys. HSMs make sure that the keys never leave the HSM boundary throughout their lifecycle. Using HSMs for key protection is required for keys that encrypt highly sensitive data (often in regulated environments).", 
            "Recommendation" : "Remove the non-HSM keys and recreate the removed ones within a destination Key Vault of type HSM. Run command Remove-AzKeyVaultKey -VaultName '{KeyVaultName}' -Name '{KeyName}' to remove non-HSM key. Use command Add-AzKeyVaultKey -VaultName  '{VaultName}' -Name '{KeyName}' -Expires '{ExpiryDate}' -Destination 'HSM' -KeyOps '{KeyOps}'. Refer: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/remove-azkeyvaultkey, https://docs.microsoft.com/en-us/powershell/module/az.keyvault/add-azkeyvaultkey", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "KeyVault", 
                "KeySecretPermissions"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Control can not be validated due to insufficient access permission on keys", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_DP_Keys_Secrets_Check_Expiry_Date", 
            "ControlSeverity" : "Medium", 
            "Description" : "All Keys and Secrets in Key Vault must have expiration dates", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault170", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Expiration dates on keys ensure that keys are rotated on a periodic basis. Key rotation is an important security hygiene activity.", 
            "Recommendation" : "(The status for this control has been marked as 'Manual' because elevated (Co-Admin/Owner/Contributor, as applicable) permission is required to check security configuration for this resource. You can re-run the control with the appropriate privilege.) To add an expiry date to keys, run command: Update-AzKeyVaultKey -VaultName '{KeyVaultName}' -Name '{KeyName}' -Expires '{ExpiryDate}'. Expiry date should not be more than 365 days for keys. To add an expiry date to secrets, run command: Update-AzKeyVaultSecret -VaultName '{KeyVaultName}' -Name '{SecretName}' -Expires '{ExpiryDate}', Expiry date should not be more than 180 days for secrets.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "KeyRotation", 
                "OwnerAccess", 
                "KeyVaultAccess", 
                "KeyVault", 
                "KeySecretPermissions"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Control can not be validated due to insufficient access permission on KeyVault keys or secrets", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_Audit_Enable_Diagnostics_Log", 
            "ControlSeverity" : "Medium", 
            "Description" : "Diagnostics logs must be enabled with a retention period of at least 365 days.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "cf820ca0-f99e-4f3e-84fb-66e913812d21", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/cf820ca0-f99e-4f3e-84fb-66e913812d21", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logs should be retained for a long enough period so that activity trail can be recreated when investigations are required in the event of an incident or a compromise. A period of 1 year is typical for several compliance requirements as well.", 
            "Recommendation" : "You can change the diagnostic settings from the Azure Portal by following the steps given here: https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-archive-diagnostic-logs#archive-diagnostic-logs-using-the-portal", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "Diagnostics", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics setting is disabled for resource - [kv001demo001].", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_AuthN_Key_Min_Operation", 
            "ControlSeverity" : "High", 
            "Description" : "Restrict the cryptographic operations permitted using keys to the ones actually required", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting the operations to be performed on Keys ensures that applications/users can perform only intended operations. This minimizes exposure of the Keys in case of user/service account compromise.", 
            "Recommendation" : "Run command Update-AzKeyVaultKey -VaultName '{KeyVaultName}' -Name '{KeyName}' -KeyOps '{KeyOps}'. Refer: https://docs.microsoft.com/en-us/powershell/module/az.keyvault/update-azkeyvaultkey", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "KeyVault", 
                "KeySecretPermissions"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Control can not be validated due to insufficient access permission on keys", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_SI_Enable_SoftDelete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete must be enabled to allow recovery of deleted Key Vault and any objects (keys, secrets, etc.) contained in it.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault230", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Key Vault acts as a safety measure to recover inadvertently or maliciously deleted Key Vault and any objects (keys, secrets, etc.) contained in it.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/key-vault/key-vault-soft-delete-powershell to enable soft delete feature on Key Vault.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Key Vault", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_KeyVault_Avoid_Excessive_Versions_Keys_Secrets", 
            "ControlSeverity" : "Medium", 
            "Description" : "Too many versions of keys or secrets should not be in use.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault240", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Having too many active versions can lead to increased complexity of solutions due to difficulty of tracking what is in use where, indirectly leading to security vulnerability due to oversight. Additionally, it can also adversely affect performance and availability.", 
            "Recommendation" : "Disable older versions of keys and secrets that are no longer required. Go to the Azure Portal > Key Vault > Settings > Keys or Secrets. Select the key or secret that has too many versions, and choose the version that needs to be disabled. Set 'Enabled' attribute as 'No'. For more on the Azure Key Vault service limits, refer: https://docs.microsoft.com/en-us/azure/key-vault/key-vault-service-limits", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "KeySecretPermissions", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : false
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Number of keys can not be validated due to insufficient access permission on keys", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Access denied: Read access is required on Key Vault Secrets to validate the number of secrets.", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Access denied: Read access is required on Key Vault Secrets and Keys to validate the number of secrets and keys.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_KeyVault_DP_Identify_Roles", 
            "ControlSeverity" : "High", 
            "Description" : "Key Vault owner must grant minimum required access to keys/secrets based on individual roles (Developer/Operator/Auditor/Security Team)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Identifying and assigning various roles ensures proper separation of duties.", 
            "Recommendation" : "Key Vault owner must identify different roles that need various levels of access on keyvault keys/secrets and configure them using a least privilege model. Refer: https://docs.microsoft.com/en-us/azure/key-vault/key-vault-secure-your-key-vault", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_KeyVault_DP_Rotate_Key_Periodocally", 
            "ControlSeverity" : "Medium", 
            "Description" : "Keys/secrets must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate the keys and secrets at regular intervals. Run command: Update-AzKeyVaultKey -VaultName '{KeyVaultName}' -Name '{KeyName}' -Expires '{ExpiryDate}' -Version '{Version}' to generate new version for key. Run command: Update-AzKeyVaultSecret -VaultName '{KeyVaultName}' -Name '{KeyName}' -Expires '{ExpiryDate}'  -Version  '{Version}'  to generate new version for secret.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_KeyVault_Audit_Review_Logs", 
            "ControlSeverity" : "Medium", 
            "Description" : "Diagnostic logs for Key Vault must be reviewed periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "KeyVault220", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic reviews of diagnostics, activity and audit logs ensures that anomalous activity can be identified early enough instead of after a major compromise.", 
            "Recommendation" : "Review diagnostic logs at regular intervals for different operations carried out on keys and secrets. Refer: https://docs.microsoft.com/en-us/azure/log-analytics/log-analytics-azure-key-vault", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "Audit", 
                "KeyVault"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "KeyVault", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/keyvault"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "kv001demo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_sample_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
                "ResourceName" : "kv001demo001", 
                "ResourceType" : "Microsoft.KeyVault/vaults", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "environment" : "demo001", 
                    "usage" : "sample"
                }, 
                "Type" : "Microsoft.KeyVault/vaults"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_sample_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_sample_001/providers/Microsoft.KeyVault/vaults/kv001demo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "kv001demo001", 
            "ResourceType" : "Microsoft.KeyVault/vaults", 
            "ResourceTypeName" : "KeyVault"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VNet_NetSec_Justify_PublicIPs", 
            "ControlSeverity" : "High", 
            "Description" : "Minimize the number of Public IPs (i.e. NICs with PublicIP) on a virtual network", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualNetwork110", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Public IPs provide direct access over the internet exposing the resource(s) to all type of attacks over the public network.", 
            "Recommendation" : "Unutilized Public IP address must be removed from virtual network. For more information visit: https://docs.microsoft.com/en-us/powershell/module/az.network/remove-azpublicipaddress", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "NetSec"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Analyzing all the NICs configured in the VNet", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "No Public IP is configured in any NIC on the Vnet", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualNetwork", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualnetwork"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "spoke001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_spoke_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "ResourceName" : "spoke001", 
                "ResourceType" : "Microsoft.Network/virtualNetworks", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "usage" : "networking"
                }, 
                "Type" : "Microsoft.Network/virtualNetworks"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_spoke_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "spoke001", 
            "ResourceType" : "Microsoft.Network/virtualNetworks", 
            "ResourceTypeName" : "VirtualNetwork"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VNet_NetSec_Justify_IPForwarding_for_NICs", 
            "ControlSeverity" : "High", 
            "Description" : "Use of IP Forwarding on any NIC in a virtual network should be scrutinized", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualNetwork120", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling IP Forwarding on a VM NIC allows the VM to receive traffic addressed to other destinations. IP forwarding is required only in rare scenarios (e.g., using the VM as a network virtual appliance) and those should be reviewed with the network security team.", 
            "Recommendation" : "Disable IP Forwarding unless it has been reviewed and approved by network security team. Go to Azure Portal --> Navigate to VM NIC (where IP Forwarding is enabled) --> IP Configurations --> IP Forwarding settings --> Click on 'Disabled'.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "NetSec"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "There are no NICs with EnableIPForwarding turned on the VNet", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualNetwork", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualnetwork"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "spoke001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_spoke_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "ResourceName" : "spoke001", 
                "ResourceType" : "Microsoft.Network/virtualNetworks", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "usage" : "networking"
                }, 
                "Type" : "Microsoft.Network/virtualNetworks"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_spoke_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "spoke001", 
            "ResourceType" : "Microsoft.Network/virtualNetworks", 
            "ResourceTypeName" : "VirtualNetwork"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VNet_NetSec_Configure_NSG", 
            "ControlSeverity" : "Medium", 
            "Description" : "NSG should be used for subnets in a virtual network to permit traffic only on required inbound/outbound ports. NSGs should not have a rule to allow any-to-any traffic", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualNetwork140", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting inbound and outbound traffic via NSGs limits the network exposure of the subnets within a virtual network and limits the attack surface.", 
            "Recommendation" : "Configure NSG rules to be as restrictive as possible via: (a) Azure Portal -> Network security groups -> <Your NSG> -> Inbound security rules -> Edit 'Allow' action rules. (b) Azure Portal -> Network security groups. -> <Your NSG> -> Outbound security rules -> Edit 'Allow' action rules.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "NetSec"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : [
                            {
                                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001/subnets/default", 
                                "Name" : "default"
                            }, 
                            {
                                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001/subnets/iaas001", 
                                "Name" : "iaas001"
                            }, 
                            {
                                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001/subnets/privatedatabricks001", 
                                "Name" : "privatedatabricks001"
                            }, 
                            {
                                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001/subnets/AzureBastionSubnet", 
                                "Name" : "AzureBastionSubnet"
                            }
                        ], 
                        "Message" : "NSG is not configured for below subnet(s) of VNet", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "VirtualNetwork", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualnetwork"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "spoke001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_spoke_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "ResourceName" : "spoke001", 
                "ResourceType" : "Microsoft.Network/virtualNetworks", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "usage" : "networking"
                }, 
                "Type" : "Microsoft.Network/virtualNetworks"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_spoke_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "spoke001", 
            "ResourceType" : "Microsoft.Network/virtualNetworks", 
            "ResourceTypeName" : "VirtualNetwork"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VNet_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualNetwork150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Virtual Network. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [spoke001]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "VirtualNetwork", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualnetwork"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "spoke001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_spoke_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "ResourceName" : "spoke001", 
                "ResourceType" : "Microsoft.Network/virtualNetworks", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "usage" : "networking"
                }, 
                "Type" : "Microsoft.Network/virtualNetworks"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_spoke_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "spoke001", 
            "ResourceType" : "Microsoft.Network/virtualNetworks", 
            "ResourceTypeName" : "VirtualNetwork"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VNet_NetSec_Justify_Gateways", 
            "ControlSeverity" : "High", 
            "Description" : "Presence of any virtual network gateways (GatewayType = VPN/ExpressRoute) in the virtual network must be justified", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualNetwork160", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Virtual network gateways enable network traffic between a virtual network and other networks. All such connectivity must be carefully scrutinized to ensure that corporate data is not subject to exposure on untrusted networks.", 
            "Recommendation" : "You can remove virtual network gateways using the Remove-AzVirtualNetworkGateway command (unless their presence has been approved by network security team). Run 'Get-Help Remove-AzVirtualNetworkGateway -full' for more help.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "NetSec"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No gateways found in VNet", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualNetwork", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualnetwork"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "spoke001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_spoke_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "ResourceName" : "spoke001", 
                "ResourceType" : "Microsoft.Network/virtualNetworks", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "usage" : "networking"
                }, 
                "Type" : "Microsoft.Network/virtualNetworks"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_spoke_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "spoke001", 
            "ResourceType" : "Microsoft.Network/virtualNetworks", 
            "ResourceTypeName" : "VirtualNetwork"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_VNet_NetSec_Justify_Peering", 
            "ControlSeverity" : "High", 
            "Description" : "Use of any virtual network peerings should be justified", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "VirtualNetwork170", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Resources in the peered virtual networks can communicate with each other directly. If the two peered networks are on different sides of a security boundary (e.g., corpnet v. private vNet), this can lead to exposure of corporate data. Hence any VNet peerings should be closely scrutinized and approved by the network security team", 
            "Recommendation" : "You can remove any virtual network peerings using the Remove-AzVirtualNetworkPeering command (unless their presence has been approved by network security team). Run 'Get-Help Remove-AzVirtualNetworkPeering -full' for more help.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Automated", 
                "NetSec"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No VNet peering found on VNet", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "VirtualNetwork", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/virtualnetwork"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "Identity" : null, 
                "Kind" : null, 
                "Location" : "westeurope", 
                "ManagedBy" : null, 
                "Name" : "spoke001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_spoke_001", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
                "ResourceName" : "spoke001", 
                "ResourceType" : "Microsoft.Network/virtualNetworks", 
                "Sku" : null, 
                "SubscriptionId" : null, 
                "Tags" : {
                    "usage" : "networking"
                }, 
                "Type" : "Microsoft.Network/virtualNetworks"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_spoke_001", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_spoke_001/providers/Microsoft.Network/virtualNetworks/spoke001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "spoke001", 
            "ResourceType" : "Microsoft.Network/virtualNetworks", 
            "ResourceTypeName" : "VirtualNetwork"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [sacf6iyfnbch000]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch000", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
                "ResourceName" : "sacf6iyfnbch000", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch000", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch000", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [sacf6iyfnbch001]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "sacf6iyfnbch001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "rg_test_3m27K1eM", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
                "ResourceName" : "sacf6iyfnbch001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_GRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "rg_test_3m27K1eM", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/rg_test_3m27K1eM/providers/Microsoft.Storage/storageAccounts/sacf6iyfnbch001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "sacf6iyfnbch001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Dont_Allow_Anonymous", 
            "ControlSeverity" : "High", 
            "Description" : "The Access Type for containers must not be set to 'Anonymous'", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage110", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Data in containers that have anonymous access can be downloaded by anyone on the internet without authentication. This can lead to a compromise of corporate data.", 
            "Recommendation" : "Run command 'Set-AzStorageContainerAcl -Name '<ContainerName>' -Permission 'Off' -Context (New-AzStorageContext -StorageAccountName '<StorageAccountName>' -StorageAccountKey '<StorageAccountKey>')'. Run 'Get-Help Set-AzStorageContainerAcl -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "HNSDisabled", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No containers were found that have public (anonymous) access in this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_Audit_AuthN_Requests", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account must be configured to log and monitor authentication request data", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage150", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Logging and monitoring of authentication request data can help to detect suspicious and malicious activities early and respond in a timely manner.", 
            "Recommendation" : "First, run the command '$storageAccount = Get-AzStorageAccount -ResourceGroupName <RGName> -Name <Storage Name> -ErrorAction SilentlyContinue'. Then, run '$storageContext = $storageAccount.Context'. This is the value that you need to supply for -Context in the subsequent commands. Run command 'Set-AzStorageServiceLoggingProperty -ServiceType '<Blob/Queue/Table>' -LoggingOperations 'All' -Context $storageContext -RetentionDays '365' -PassThru'. Run 'Get-Help Set-AzStorageServiceLoggingProperty -full' for more help. Set-AzStorageServiceMetricsProperty -MetricsType 'Hour' -ServiceType '<Blob/Queue/Table/File>' -Context storageContext -MetricsLevel 'ServiceAndApi' -RetentionDays '365' -PassThru. Run 'Get-Help Set-AzStorageServiceMetricsProperty -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "Audit", 
                "OwnerAccess", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Failed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob logs) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue logs) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table logs) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(blob aggregate metrics, blob per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [blob]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(file aggregate metrics, file per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [file]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(queue aggregate metrics, queue per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [queue]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Diagnostics settings(table aggregate metrics, table per API metrics) is either disabled OR not retaining logs for at least 365 days for service type - [table]", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Failed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Encrypt_In_Transit", 
            "ControlSeverity" : "High", 
            "Description" : "HTTPS protocol must be used for accessing Storage Account resources", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage160", 
            "IsBaselineControl" : true, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : "404c3081-a854-4457-ae30-26a93ef643f9", 
            "policyDefinitionId" : "/providers/Microsoft.Authorization/policyDefinitions/404c3081-a854-4457-ae30-26a93ef643f9", 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Use of HTTPS ensures server/service authentication and protects data in transit from network layer man-in-the-middle, eavesdropping, session-hijacking attacks. When enabling HTTPS one must remember to simultaneously disable access over plain HTTP else data can still be subject to compromise over clear text connections.", 
            "Recommendation" : "Run command 'Set-AzStorageAccount -ResourceGroupName <RGName> -Name <StorageAccountName> -EnableHttpsTrafficOnly $true'. Run 'Get-Help Set-AzStorageAccount -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Storage secure transfer is enabled", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_DP_Restrict_CORS_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that CORS access is granted to a minimal set of trusted origins and only required verbs are supported.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage250", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "CORS enables applications running under one domain to access a resource under another domain. Using '*' (allow all) for CORS setting means that an application running under any domain can have access to your application's resources and data. Restricting allowed origins to the specific set that needs access aligns with the principle of least privilege.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> CORS --> for each of the Storage services  i.e. Blob/File/Table/Queue --> Add --> Provide the specific domain names and other CORS details that should be allowed to make cross-origin calls. Note: No action is needed if you are not using CORS for your service.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "DP", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "OwnerAccess", 
                "ResourceLocked"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Passed", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "The CORS feature has not been enabled on this storage account.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Passed"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Restrict_Network_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Ensure that Firewall and Virtual Network access is granted to a minimal set of trusted origins", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage260", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Restricting access using firewall/virtual network config reduces network exposure of a storage account by limiting access only to expected range/set of clients. Note that this depends on the overall service architecture and may not be possible to implement in all scenarios.", 
            "Recommendation" : "Go to Azure Portal --> your Storage service --> Settings --> Firewalls and virtual networks --> Selected Network. Provide the specific IP address and Virtual Network details that should be allowed to access storage account.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "StandardSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumSku"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No Firewall and Virtual Network restrictions are defined for this storage", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : {
                        "AttestedBy" : "", 
                        "AttestedDate" : "0001-01-01T00:00:00.0000000", 
                        "DataObject" : {
                            "DefaultAction" : "Allow"
                        }, 
                        "ExpiryDate" : "", 
                        "Justification" : "", 
                        "Message" : "Firewall and Virtual Network restrictions defined for this storage:"
                    }
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_BCDR_Enable_Soft_Delete", 
            "ControlSeverity" : "Medium", 
            "Description" : "Soft delete should be enabled to allow recovery of deleted blobs or blob snapshots", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage270", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Enabling soft delete feature on Storage acts as a safety measure to recover inadvertently or maliciously deleted blobs or blob snapshots. If your data is critical, this can be a valuable BC/DR mechanism.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/storage/blobs/storage-blob-soft-delete to enable soft delete feature on Storage.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "BCDR", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "ResourceLocked", 
                "OwnerAccess"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "Soft delete is disabled for this Storage account", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthZ_Grant_Min_RBAC_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "All users/identities must be granted minimum required permissions using Role Based Access Control (RBAC)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage280", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access by leveraging RBAC feature ensures that users are granted just enough permissions to perform their tasks. This minimizes exposure of the resources in case of user/service account compromise.", 
            "Recommendation" : "Remove any excessive privileges granted on the Search service. Run command: Remove-AzRoleAssignment -SignInName '<SignInName>' -Scope '<Scope>' RoleDefinitionName '<RoleDefinitionName>'. Run 'Get-Help Remove-AzRoleAssignment -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthZ", 
                "RBAC", 
                "BlobStorage", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No identities have been explicitly provided with RBAC access to resource - [tfdemo001]", 
                        "MessageType" : "Info"
                    }, 
                    {
                        "DataObject" : null, 
                        "Message" : "Note: 4 identities (ServicePrincipal: 3, User: 1) have inherited RBAC access to resource. It's good practice to keep the RBAC access to minimum.", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "Yes", 
            "ControlID" : "Azure_Storage_AuthN_Use_AAD_Based_Access", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use AAD-based access for storage account", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage290", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Where possible, use AAD-based identities (SPNs/groups/Users) to grant access to storage accounts using minimum RBAC roles. Wherever the client supports it, the SPN-type used should be a 'Managed Service Identity'(MSI). The identity is managed by the Azure platform and eliminates the need to provision/manage/rotate any secrets thus reducing the overall risk. Using the native enterprise directory for authentication ensures that there is a built-in high level of assurance in the user identity established for subsequent access control.", 
            "Recommendation" : "Refer: https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/overview, https://docs.microsoft.com/en-us/azure/storage/common/storage-auth-aad-msi ", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Automated", 
                "AuthN", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Verify", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [
                    {
                        "DataObject" : null, 
                        "Message" : "No SPN/MSI/User has been explicitly provided with Storage RBAC access to this resource", 
                        "MessageType" : "Info"
                    }
                ], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Verify"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Use_IP_ACL", 
            "ControlSeverity" : "Medium", 
            "Description" : "Use IP-restrictions in SAS tokens to only permit access from intended IP addresses", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage180", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Using appropriate IP-based ACLs ensures that data in storage is protected and accessible only to entities from an expected set of endpoints.", 
            "Recommendation" : "Restrict storage SAS tokens to specific IP addresses/ranges where possible. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1. Note: In case the IP range is indeterminate (for instance, if the client is a PaaS endpoint), you may need to attest this control.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Clients_Use_SAS", 
            "ControlSeverity" : "High", 
            "Description" : "End user/client apps should access Storage Account through SAS token only (and not via Storage Account Key)", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage190", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "A shared access signature (SAS) provides you with a way to grant limited access to objects in your Storage Account to other clients, without exposing your account key. This is in accordance with the principle of least privilege access.", 
            "Recommendation" : "Do not use Storage Account key directly in apps. Use a SAS token to limit the access based on scope, duration, IPs, etc. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1.", 
            "Tags" : [
                "SDL", 
                "Best Practice", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_DP_Rotate_Keys", 
            "ControlSeverity" : "Medium", 
            "Description" : "Storage Account keys must be rotated periodically", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage200", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Periodic key/password rotation is a good security hygiene practice as, over time, it minimizes the likelihood of data loss/compromise which can arise from key theft/brute forcing/recovery attacks.", 
            "Recommendation" : "Rotate Storage Account keys on a periodic basis. To generated a new key, run command 'New-AzStorageAccountKey -KeyName '<key1/key2>' -Name '<StorageAccountName>' -ResourceGroupName '<RGName>'. Deploy the new key or derived SAS tokens to various clients as appropriate. Run 'Get-Help New-AzStorageAccountKey -full' for more help.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "DP", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }, 
    {
        "ControlItem" : {
            "AttestationExpiryPeriodInDays" : 0, 
            "AttestationPeriodInDays" : 0, 
            "Automated" : "No", 
            "ControlID" : "Azure_Storage_AuthZ_Allow_Limited_Access_to_Services", 
            "ControlSeverity" : "High", 
            "Description" : "Use Stored Access Policies with least privileges needed to access services in the Storage Account.", 
            "Enabled" : true, 
            "GraceExpiryDate" : "0001-01-01T00:00:00.0000000", 
            "Id" : "AzureStorage210", 
            "IsBaselineControl" : false, 
            "IsPreviewBaselineControl" : false, 
            "NewControlGracePeriodInDays" : 0, 
            "PolicyDefinitionGuid" : null, 
            "policyDefinitionId" : null, 
            "PolicyDefnResourceIdSuffix" : null, 
            "Rationale" : "Granting minimum access ensures that users are granted just enough permissions to perform their tasks. This minimizes operations that can be performed on the resource in case of access policy key compromise.", 
            "Recommendation" : "Create a SAS token with Stored Access Policy for service access using the minimal required privileges. Refer: https://docs.microsoft.com/en-us/azure/storage/storage-dotnet-shared-access-signature-part-1#controlling-a-sas-with-a-stored-access-policy.", 
            "Tags" : [
                "SDL", 
                "TCP", 
                "Manual", 
                "AuthZ", 
                "StandardSku", 
                "PremiumSku", 
                "GeneralPurposeStorage", 
                "BlobStorage", 
                "PremiumFileShareStorage"
            ], 
            "ValidAttestationStates" : null
        }, 
        "ControlResults" : [
            {
                "ActualVerificationResult" : "Manual", 
                "AttestationStatus" : "None", 
                "ChildResourceName" : "", 
                "CurrentSessionContext" : {
                    "IsLatestPSModule" : true, 
                    "Permissions" : {
                        "HasAttestationReadPermissions" : false, 
                        "HasAttestationWritePermissions" : false, 
                        "HasRequiredAccess" : true
                    }
                }, 
                "FirstFailedOn" : "1900-01-01T00:00:00.0000000", 
                "FirstScannedOn" : "1900-01-01T00:00:00.0000000", 
                "IsControlInGrace" : false, 
                "MaximumAllowedGraceDays" : 0, 
                "Messages" : [], 
                "StateManagement" : {
                    "AttestedStateData" : null, 
                    "CurrentStateData" : null
                }, 
                "UserComments" : null, 
                "VerificationResult" : "Manual"
            }
        ], 
        "FeatureName" : "Storage", 
        "Messages" : [], 
        "Metadata" : {
            "Reference" : "aka.ms/azsktcp/storage"
        }, 
        "PartialScanIdentifier" : "", 
        "ResourceContext" : {
            "ResourceDetails" : {
                "ChangedTime" : null, 
                "CreatedTime" : null, 
                "ETag" : null, 
                "ExtensionResourceName" : null, 
                "ExtensionResourceType" : null, 
                "Id" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "Identity" : null, 
                "Kind" : "StorageV2", 
                "Location" : "uksouth", 
                "ManagedBy" : null, 
                "Name" : "tfdemo001", 
                "ParentResource" : null, 
                "Plan" : null, 
                "Properties" : null, 
                "ResourceGroupName" : "tfstate", 
                "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
                "ResourceName" : "tfdemo001", 
                "ResourceType" : "Microsoft.Storage/storageAccounts", 
                "Sku" : {
                    "Capacity" : null, 
                    "Family" : null, 
                    "Model" : null, 
                    "Name" : "Standard_RAGRS", 
                    "Size" : null, 
                    "Tier" : "Standard"
                }, 
                "SubscriptionId" : null, 
                "Tags" : {}, 
                "Type" : "Microsoft.Storage/storageAccounts"
            }, 
            "ResourceGroupDetails" : null, 
            "ResourceGroupName" : "tfstate", 
            "ResourceGroupTags" : {}, 
            "ResourceId" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905/resourceGroups/tfstate/providers/Microsoft.Storage/storageAccounts/tfdemo001", 
            "ResourceMetadata" : {}, 
            "ResourceName" : "tfdemo001", 
            "ResourceType" : "Microsoft.Storage/storageAccounts", 
            "ResourceTypeName" : "Storage"
        }, 
        "SubscriptionContext" : {
            "Scope" : "/subscriptions/552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionId" : "552cae66-87bd-4c0b-af77-fb2578fb7905", 
            "SubscriptionName" : "Visual Studio Enterprise"
        }
    }
]
